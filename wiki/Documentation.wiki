#summary FDTKit Documentation
#labels Featured,Phase-Deploy

= FDTKit Documentation & Usage Guide =

== Introduction ==

Assuming you have already installed [http://code.google.com/p/fdtkit/wiki/Eclipse_FDT_Subclipse_Install_Guide Eclipse, FDT, Subclipse] & [http://code.google.com/p/fdtkit/wiki/Installation FDTKit] you are ready to start using your new environment. So, lets start by creating a test project and continue customizing our environment.

== Create a new Project ==
  # First we must make sure we are in the _Flash Perspective_ by going to "Window -> Open Perspective -> Flash".
  # "File -> New -> New Flash Project".
  # Enter "Test Project" for "Project Name", insuring that "Use Default Location" is checked and hit "Next".
  # Select your default "Core Library" (based on your target FlashPlayer version). If you would like to use a different Core Library simply press "Change Core Library" and select the version you would like (these will already be available via FDTKit installation).
  # Press "Finish" and your project will be created. You may see this in the "Flash Explorer" panel ("Window -> Show View -> Flash Explorer).
 
== Create the Project Layout ==
  # Now we want to create a good project structure to keep things organized. Right click our "Test Project" in the Flash Explorer and click "New -> Folder".
  # Name the folder "deploy" and press finish.
  # Repeat steps 1 & 2 and create the following project directory structure:

    * *deploy*/ `- project files ready for deployment to a productions server (sans source code)`
    * deploy/assets `- misc external project graphics, audio, videos, etc`
    * deploy/css `- css files`
    * deploy/js `- javascript files`
    * deploy/php `- php files`
    * *docs*/ `- ActionScript Documentation generated with FDTKit`
    * *lib*/ `- assets needed for project development but not for production`
    * lib/assets `- generic assets`
    * lib/comps `- design comps`
    * lib/fonts `- reqiured fonts`
    * *tests*/ `- unit tests and fla's`


== Create a Source Folder ==
  # Now we need a project source folder to keep our classes in.  We so this simply by right-clicking our "Test Project" in the Flash Explorer.
  # Choose "New -> Source Folder" which we will name "src".


== Create a Class ==
  # Right click on our project "src" folder and choose "New -> Class".
  # In the "Create AS2 Class" wizard fill in our package: "com.sekati.core", classname:"Test", superclass:"MovieClip".
  # Press "Finish". Our class has been created, you may view it by expanding the "src" folder to see our package and its class contents. 
 

== Create an Fla ==
  # Right click on our project "src" folder and choose "New -> Fla".
  # In the "New Fla" wizard fill in our fla name: "Main.fla"
  # Press "Finish". Our fla has been created.
  # Double click the "Main.fla" in our "src" folder and the Flash IDE will launch and open the Fla.
  # Next go to "Publish Settings" in the Flash IDE and set the FlashPlayer Version for the FLA to match your Core Library.
  # Select the "Formats" tab in "Publish Settings". 
  # Uncheck "HTML".
  # Change the "Flash" file from "Main.fla" to "../deploy/Main.fla" so our movie will be published into the "deploy" directory in our project structure.


== Creating Test Fla's ==
  # Creating unit test fla's in the "tests/" directory is quite similar to the process described above except we do not want to publish our swf's  into the deploy directory and we will need to adjust the as2 path.
  # To adjust the class path in the Flash IDE we go to  "Publish Settings" and click "settings" next to "ActionScript version" and add "../src" so our test fla's can locate our classes.


== Automate Compilation, Documentation & Other Common Tasks ==

  === Add the Project Buildfile ===
  # A great number of things can be automated in Eclipse using [http://fdtkit.googlecode.com/svn/trunk/build.xml FDTKit's Buildfile] & [http://en.wikipedia.org/wiki/Apache_Ant Apache Ant].
  # First we need to copy the FDTKit Buildfile into our project: Expand the "fdtkit" project in FlashExplorer.
  # Right click on "build.xml" in fdtkit" and choose "Copy".
  # Right click our "Test Project" and choose "Paste".
  # Double click the Build.xml now in your Test Project so that we may configure the buildfile for our project.
  # Edit the "project name" attribute.
  # Edit the "fdtkit" location to reflect the absolute path to the "fdtkit" project on your computer.
  # Edit the "Project Details" paying special attention to corelib, target_player, target_fla & target_swf (the remaining Project Details are unused unless you plan on compiling with MTASC).
  # Save you updated build.xml and close the file.
  
  === Using the Project Buildfile === 
  #
 