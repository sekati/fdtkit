<?xml version="1.0" encoding="UTF-8"?><templates><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Creates an empty class" enabled="true" id="com.pf.fdt.ui.editor.template.class" name="class">/**
 * @author ${user}
 */
class ${enclosing_package_and_type} ${cursor}{
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Create an extends MovieClip class" enabled="true" name="classExtends">class ${enclosing_package_and_type} extends MovieClip {
	private var _this:MovieClip;
	private function ${enclosing_type}() {
	}
	private function onLoad():Void {
		configUI ();
	}
	public function configUI():Void {
		_this = this;
		${cursor}
	}
	//
}
// eof</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Creates Constructor for a class" enabled="true" id="com.pf.fdt.ui.editor.template.constructor" name="constructor">/**
 * ${enclosing_type} Constructor
 */
public function ${enclosing_type}() {
	${cursor}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Private Constructor" enabled="true" name="constructor_private">/**
 * ${enclosing_type} Private Constructor
 */
private function ${enclosing_type}() {
	${cursor}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Singleton Private Constructor and Accessor" enabled="true" name="constructor_singleton">	private static var _instance:${enclosing_type};

	/**
	 * Singleton Private Constructor.
	 */
	private function ${enclosing_type}() {
	}

	/**
 	 * Singleton Accessor.
	 * @return ${enclosing_type}
	 */
	public static function getInstance():${enclosing_type} {
		if (!_instance) _instance = new ${enclosing_type}();
		return _instance;
	}
	
	/**
	 * Shorthand Singleton accessor getter.
	 * @return ${enclosing_type}
	 */
	 public static function get $$():${enclosing_type} {
	 	return ${enclosing_type}.getInstance();	
	 }</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="static create a component" enabled="true" id="com.pf.fdt.ui.editor.template.create" name="create">public static function create(container : MovieClip,name : String,
		depth : Number, init : Object) : ${enclosing_type} {
	var mc : MovieClip = container.attachMovie("${enclosing_package_and_type}", name, depth, init);	
	return ${enclosing_type}(mc);
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Comment Description" enabled="true" name="desc">/**
 * ${cursor}
 */</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="do-while loop" enabled="true" id="com.pf.fdt.ui.editor.template.do" name="do">do {
	${cursor}
} while (${condition});</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Create a generic for loop" enabled="true" name="for">for (var i:Number=0; i &lt; ${cursor}; i++) {
	
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Iterator over an array using enumeration" enabled="true" id="com.pf.fdt.ui.editor.template.foren" name="fore">for (var ${index} : String in ${array}) {
	${cursor}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Iterator over an array" enabled="true" id="com.pf.fdt.ui.editor.template.forit" name="fori">for (var ${index} : Number = 0; ${index} &lt; ${array}.length; ${index}++) {
	${cursor}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Private Function" enabled="true" name="function_private">private function ${method_name}(${method_params}):${return_type} {
	${cursor}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Private Static Function" enabled="true" name="function_private_static">private static function ${method_name}(${method_params}):${return_type} {
	${cursor}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Public Function" enabled="true" name="function_public">public function ${method_name}(${method_params}):${return_type} {
	${cursor}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Public Static Function" enabled="true" name="function_public_static">public static function ${method_name}(${method_params}):${return_type} {
	${cursor}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Comment Header" enabled="true" name="header">/**
 * ${enclosing_package_and_type}
 * @version 1.0.0
 * @author ${user}
 * Copyright (C) ${year}  jason m horwitz, Sekat LLC. All Rights Reserved.
 * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php
 */</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Creates an empty if-else block" enabled="true" id="com.pf.fdt.ui.editor.template.ifel" name="ifel">if(${condition}) {
	${cursor}
} else {
	
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="test type and cast" enabled="true" id="com.pf.fdt.ui.editor.template.instanceof" name="instanceof">if (${name} instanceof ${type}) {
	var ${newName} : ${type} = ${type}(${name});
	${cursor}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Creates an empty interface" enabled="true" id="com.pf.fdt.ui.editor.template.interface" name="interface">/**
 * @author ${user}
 */
interface ${enclosing_package_and_type} ${cursor}{
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="lazy create an instance" enabled="true" id="com.pf.fdt.ui.editor.template.lazy" name="lazy">if (${name} == null) {
	${name} = new ${type}(${arguments});
	${cursor}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Creates an MTASC public static main function" enabled="true" id="com.pf.fdt.ui.editor.template.smain" name="main">public static function main(container : MovieClip) : Void {
	${cursor}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Delegated onRollOut" enabled="true" name="onRollOut_delegate">${instance}.onRollOut = ${instance}.onDragOut = Delegate.create(${origin}, ${out_method});</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Delegated onRollOver" enabled="true" name="onRollOver_delegate">${instance}.onRollOver = ${instance}.onDragOver = Delegate.create(${origin}, ${over_method});</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Create a Singleton" enabled="true" name="singleton">	private static var _instance:${enclosing_type};

	/**
	 * Singleton Private Constructor.
	 * @return Void
	 */
	private function ${enclosing_type}() {
	}

	/**
 	 * Singleton Accessor.
	 * @return ${enclosing_type}
	 */
	public static function getInstance():${enclosing_type} {
		if (!_instance) _instance = new ${enclosing_type}();
		return _instance;
	}
	
	/**
	 * Shorthand Singleton accessor getter.
	 * @return ${enclosing_type}
	 */
	 public static function get $$():${enclosing_type} {
	 	return ${enclosing_type}.getInstance();	
	 }
	
	${cursor}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Creates complete Singleton" enabled="true" id="com.pf.fdt.ui.editor.template.singleton" name="singletonClass">/**
 * @author ${user}
 */
class ${enclosing_package_and_type} {
	
	private static var instance : ${enclosing_type};
	
	/**
	 * @return singleton instance of ${enclosing_type}
	 */
	public static function getInstance() : ${enclosing_type} {
		if (instance == null)
			instance = new ${enclosing_type}();
		return instance;
	}
	
	private function ${enclosing_type}() {
		${cursor}
	}
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="trace current method" enabled="true" id="com.pf.fdt.ui.editor.template.systrace" name="systrace">trace("${enclosing_type}.${enclosing_method}(${enclosing_method_arguments})");</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="creates toString function" enabled="true" id="com.pf.fdt.ui.editor.template.toString" name="toString">public function toString() : String {
	return "${enclosing_package_and_type}";
}</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Trace for the lazy man" enabled="true" name="trace">trace(${string});</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Comment Usage" enabled="true" name="usage">/**
 * 
 * {@code Usage:
 * ${cursor}
 * }
 */</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Private Var" enabled="true" name="var_private">private var ${name}:${type};</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Private Var (Initialized)" enabled="true" name="var_private_initialized">private var ${name}:${type} = ${value};</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Private Static Var (Initialized)" enabled="true" name="var_private_static_initialized">private static var ${name}:${type} = ${value};</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Public Var" enabled="true" name="var_public">public var ${name}:${type};</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Public Var (Initialized)" enabled="true" name="var_public_initialized">public var ${name}:${type} = ${value};</template><template autoinsert="true" context="com.pf.fdt.ui.editor.template.actionscript" deleted="false" description="Public Static Var (Initialized)" enabled="true" name="var_public_static_initialized">public static var ${name}:${type} = ${value};</template></templates>